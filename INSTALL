# Install the app
#################

# Create a virtualenv 
$  virtualenv --no-site-packages ve

# Activate virtual envrionnement
$  source ve/bin/activate

 You're now in virtual environment: all programs will be installed in ~/ve !


# Install dependencies
$ python setup.py install

# Error on windows for djeneralize
See http://stackoverflow.com/questions/9136375/django-file-picker-setup-py-broken
Remove trailing slash in ve/build/djeneralize/MANIFEST.in


# Check the settings
$ vim mediamis/settings/local_settings.py


# Create tables
 ./manage.py schemamigration friendlib --initial
 ./manage.py syncdb
 ./manage.py migrate




# Run development server
########################

$ ./manage.py runserver_plus




# Use on Heroku ...
####################
Cf. http://devcenter.heroku.com/articles/django

!!! Make sure mediamis/settings.py exist and IS a file, because heroku add some stuff

$ git init
$ git add .
$ git commit -m "Initial commit"

$ heroku create --stack cedar
$ git push heroku master

#### Create and sync tables
$ heroku run python mediamis/manage.py schemamigration friendlib --initial      #### No need, should be commited ....
$ heroku run python mediamis/manage.py syncdb
$ heroku run python mediamis/manage.py migrate


# Check process
$ heroku ps

# Si pas de web worker
$ heroku scale web=1

$ heroku open


# Init new Postgres base
#########################
sql> create user mediamis password 'mediamis'
sql> create database mediamis with owner = mediamis
(restore a backup file :
C:/Program Files (x86)/PostgreSQL/9.2/bin\pg_restore.exe --host localhost --port 5432 --username "postgres" --dbname "mediamis" --role "mediamis" --no-password  --data-only --verbose "C:\Users\steph\Docs perso\Code\dev\perso\mediamis\data\b003.dump")


# Making backup of existing data
# and export locally database
# See https://devcenter.heroku.com/articles/pgbackups
##################################

*** With backup solution (must run a Postgres locally)
# Make backup
  $ heroku pgbackups:capture
# Download it
  $ heroku pgbackups:url
# Import it locally (or load it with pgAdmin Tools/Retore)
  $ pg_restore --verbose --clean --no-acl --no-owner -h myhost -U myuser -d mydb my_backup.dump

*** With direct export (slow)
  $ heroku pg:pull sqlite://plop.db
  $ heroku pg:pull "jdbc:postgresql://localhost/mediamis"

*** With dumpscript
    $ heroku run python mediamis/manage.py dumpscript auth.User
    $ heroku run python mediamis/manage.py dumpscript friendlib

    


# Update code on Heroku
######################

*** Backup the data (cf. up)

*** Make sure you don't fuck up the migrations
    -> Migrations need to be commited !
    Go to LOCAL project directory
    $ heroku run python mediamis/manage.py shemamigration friendlib --auto
    [COMMIT]

*** Push the new updates to Heroku
$ git push heroku master


# Update the tables
#####################

*** Make sure you don't fuck up the migrations
    -> Migrations need to be commited !

*** Update the tables
    $ heroku run python mediamis/manage.py syncdb
    $ heroku run python mediamis/manage.py migrate friendlib



# Reseting the tables (if something wrong...)
##################################

*** Clear the tables
    $ heroku run python mediamis/manage.py sqlclear friendlib south  #######RESET NOT GOOD: CREATE THE TABLES AS WELL !!!
            DROP TABLE "friendlib_mediarequest";
            DROP TABLE "friendlib_boardgame";
            DROP TABLE "friendlib_divx";
            DROP TABLE "friendlib_dvd";
            DROP TABLE "friendlib_movie";
            DROP TABLE "friendlib_book";
            DROP TABLE "friendlib_media";
            DROP TABLE "south_migrationhistory";
    $ heroku pg:psql

*** Make sure you have only initial migration file commited and pushed
    $ heroku run python mediamis/manage.py shemamigration friendlib --auto

*** Create new ones
    $ heroku run python mediamis/manage.py syncdb
    $ heroku run python mediamis/manage.py migrate friendlib

*** Put initial data
        o Users
    $ heroku run python mediamis/manage.py runscript data_users

        o Some Medias
    $ heroku run python mediamis/manage.py runscript data_medias




    








# Various tips
###############

# Generate graph of models
./manage.py graph_models -g friendlib auth -o ../specs/models.png

# Update databases tables
 ./manage.py schemamigration friendlib --auto
 ./manage.py migrate friendlib


# Export data
 ./manage.py dumpscript > scripts/mescouilles.py


# Load script data
 ./manage.py reset auth friendlib
 ./manage.py runscript 





# Create initial south migration (once for all)
$ for app in cipsdb ajax_validation crumbs; do ./manage schemamigration $app --initial ; done

# Create tables for on all databases
$ ./manage multi_syncdb
$ ./manage mutil_migrate


# Note on South
###############
Upgrade a model

$ ./manage.py schemamigration cipsdb --auto
$ ./manage.py migrate cipsdb



Les milles et unes nuits (by alice)
Alicette Ã  phuket (by alice)
Bernard l'herbite (by steph)
Alice au pays des merveilles (by steph)